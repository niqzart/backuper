dotenv: backup.env

parameters:
  base_backup_folder:  # constant, always `backup`
    source: constant
    value: backup
  zip_password:  # required to be specified in environment
    source: environment
  archive_name:  # required to be specified as the first cli-argument
    source: cli-argument
    index: 0

actions:
  backup-from-pc:
    type: backup  # uses `robocopy /mir`
    source: "."
    target: "./${base_backup_folder}/pc"  # parameter substitution will turn this into `./backup/pc`
    exclude:
      directory_names:  # see robocopy's `/xd` argument
        - .git
        - venv
        - .mypy_cache
        - ${base_backup_folder}
      filename_patterns:  # see robocopy's `/xf` argument
        - "*.whl"
        - "*.tar.gz"
        - "*.7z.*"
    override_permissions: false  # see robocopy's `/b` argument

  backup-from-android:  # uses `adb shell ls` & `adb pull` for robocopy-like backup
    type: from-android
    source: "/sdcard/Pictures"
    target: "${base_backup_folder}/android/pictures"
    filename_regex: "^(?!.trashed).*"  # excludes files in the recycle bin

  create-full-archive:
    type: compress
    source: "./${base_backup_folder}"
    archive_name: "${archive_name}"
    volume_size: 30k
    password: ${zip_password}
